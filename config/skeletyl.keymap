#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hmp: homerow_mods_pinky {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_PINKY";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        game_lt_stickytap: game_lt_stickytap {
            compatible = "zmk,behavior-hold-tap";
            label = "GAME_LT_STICKYTAP";
            bindings = <&to>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
&kp Q            &kp W      &kp E        &kp R        &kp T            &kp Y         &kp U  &kp I      &kp O    &kp P
&hmp LEFT_GUI A  &kp S      &kp D        &kp F        &kp G            &kp H         &kp J  &kp K      &kp L    &hmp RIGHT_GUI SEMICOLON
&kp Z            &kp X      &kp C        &kp V        &kp B            &kp N         &kp M  &kp COMMA  &kp DOT  &kp FSLH
&lt 3 ESCAPE     &lt 2 TAB  &lt 1 ENTER  &lt 4 ENTER  &lt 5 BACKSPACE  &lt 6 DELETE
            >;
        };

        num {
            bindings = <
&kp LEFT_PARENTHESIS  &kp NUMBER_1  &mt EQUAL NUMBER_2  &kp NUMBER_3  &kp RIGHT_PARENTHESIS  &none  &none  &none  &none  &none
&kt PLUS              &kp N4        &mt N0 N5           &kp N6        &kp ASTERISK           &none  &none  &none  &none  &none
&kp MINUS             &kp N7        &kp N8              &kp N9        &kp SLASH              &none  &none  &none  &none  &none
&none                 &none         &none               &none         &none                  &none
            >;
        };

        nav {
            bindings = <
&none  &kp HOME     &kp UP_ARROW  &kp END        &none  &none  &none  &none  &none  &none
&none  &kp LEFT     &kp DOWN      &kp RIGHT      &none  &none  &none  &none  &none  &none
&none  &kp PAGE_UP  &none         &kp PAGE_DOWN  &none  &none  &none  &none  &none  &none
&none  &none        &none         &none          &none  &none
            >;
        };

        func {
            bindings = <
&kp F10  &kp F1  &kp F2  &kp F3           &none  &none  &none  &none  &none  &none
&kp F11  &kp F4  &kp F5  &kp F6           &none  &none  &none  &none  &none  &none
&kp F12  &kp F7  &kp F8  &kp F9           &none  &none  &none  &none  &none  &none
&none    &none   &none   &kp PRINTSCREEN  &none  &none
            >;
        };

        programming {
            bindings = <
&none                    &kp LEFT_PARENTHESIS   &mt QUESTION COLON       &kp RIGHT_PARENTHESIS  &none         &none  &none  &none  &none  &none
&kp PLUS                 &kp LEFT_BRACE         &mt DOT SEMICOLON        &kp RIGHT_BRACE        &kp ASTERISK  &none  &none  &none  &none  &none
&kp MINUS                &kp LEFT_BRACKET       &mt GRAVE DOUBLE_QUOTES  &kp RIGHT_BRACKET      &kp SLASH     &none  &none  &none  &none  &none
&mt AMPERSAND LESS_THAN  &mt EXCLAMATION EQUAL  &mt PIPE GREATER_THAN    &none                  &none         &none
            >;
        };

        button {
            bindings = <
&none      &none      &kp LC(A)            &none          &none  &none  &none  &none  &none  &none
&none      &kp LC(Z)  &mt LS(LC(F)) LC(F)  &kp LC(LS(Z))  &none  &none  &none  &none  &none  &none
&none      &none      &none                &none          &none  &none  &none  &none  &none  &none
&kp LC(X)  &kp LC(C)  &kp LC(V)            &none          &none  &none
            >;
        };

        utils {
            bindings = <
&bootloader     &none         &none         &none  &none  &none  &none  &none  &none  &bootloader
&none           &none         &none         &none  &none  &none  &none  &none  &none  &none
&none           &none         &none         &none  &none  &none  &none  &none  &none  &none
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &none  &none  &none
            >;
        };

        gaming_pad {
            bindings = <
&hmp TAB T     &kp Q           &kp W                              &kp E  &kp R  &kp Y  &kp U  &kp I  &kp O  &kp P
&hmp ESCAPE G  &kp A           &kp S                              &kp D  &kp F  &kp H  &kp J  &kp K  &kp L  &none
&kp B          &kp Z           &kp X                              &kp C  &kp V  &kp N  &kp M  &none  &none  &none
&kp SPACE      &kp LEFT_SHIFT  &game_lt_stickytap 8 LEFT_CONTROL  &none  &none  &none
            >;
        };

        gaming_num {
            bindings = <
&kp LEFT_PARENTHESIS  &kp NUMBER_1  &mt EQUAL NUMBER_2  &kp NUMBER_3  &kp RIGHT_PARENTHESIS  &none  &none  &none  &none  &none
&kt PLUS              &kp N4        &mt N0 N5           &kp N6        &kp ASTERISK           &none  &none  &none  &none  &none
&kp MINUS             &kp N7        &kp N8              &kp N9        &kp SLASH              &none  &none  &none  &none  &none
&none                 &none         &none               &none         &none                  &none
            >;
        };

        gaming_qwerty {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P
&kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp K  &kp L  &none
&kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &none  &none  &none
&none  &none  &none  &none  &none  &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        gaming_num {
            if-layers = <7>;
            then-layer = <8>;
        };

        gaming_qwerty {
            if-layers = <7>;
            then-layer = <9>;
        };
    };
};
