#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        hmp: homerow_mods_pinky {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_PINKY";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        to_utils {
            bindings = <&tog 6>;
            key-positions = <7 2 30 35>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_mac {
            bindings = <
&kp Q            &kp W           &kp E               &kp R             &kp T            &kp Y       &kp U              &kp I                &kp O            &kp P
&hmp LEFT_GUI A  &hm LEFT_ALT S  &hm LEFT_CONTROL D  &hm LEFT_SHIFT F  &kp G            &kp H       &hm RIGHT_SHIFT J  &hm RIGHT_CONTROL K  &hm RIGHT_ALT L  &hmp RIGHT_GUI SEMICOLON
&kp Z            &kp X           &kp C               &kp V             &kp B            &kp N       &kp M              &kp COMMA            &kp DOT          &kp FSLH
&lt 3 ESCAPE     &lt 2 SPACE     &lt 1 TAB           &lt 4 ENTER       &lt 5 BACKSPACE  &kp DELETE
            >;
        };

        num {
            bindings = <
&none     &none     &none      &none      &none   &none      &kp N7  &kp N8  &kp N9  &none
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none   &kp PLUS   &kp N4  &kp N5  &kp N6  &mt CARET STAR
&none     &none     &none      &none      &none   &kp MINUS  &kp N1  &kp N2  &kp N3  &mt PRCNT SLASH
&none     &none     &none      &kp DOT    &kp N0  &kp EQUAL
            >;
        };

        nav {
            bindings = <
&none     &none     &none      &none      &none     &none       &kp HOME     &kp UP_ARROW  &kp END        &none
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &none       &kp LEFT     &kp DOWN      &kp RIGHT      &none
&none     &none     &none      &none      &none     &none       &kp PAGE_UP  &none         &kp PAGE_DOWN  &none
&none     &none     &none      &kp ENTER  &kp BSPC  &kp DELETE
            >;
        };

        func {
            bindings = <
&none     &none     &none      &none      &kp PRINTSCREEN  &none  &kp F7  &kp F8  &kp F9  &kp F12
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none            &none  &kp F4  &kp F5  &kp F6  &kp F11
&none     &none     &none      &none      &none            &none  &kp F1  &kp F2  &kp F3  &kp F10
&none     &none     &none      &none      &none            &none
            >;
        };

        programming {
            bindings = <
&mt DOLLAR GRAVE  &kp LEFT_PARENTHESIS  &kp DOUBLE_QUOTES         &kp RIGHT_PARENTHESIS  &kp SINGLE_QUOTE  &none  &none      &none      &none     &none
&none             &kp LEFT_BRACE        &kp COLON                 &kp RIGHT_BRACE        &none             &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
&kp PIPE          &kp LEFT_BRACKET      &mt QUESTION EXCLAMATION  &kp RIGHT_BRACKET      &kp AMPERSAND     &none  &none      &none      &none     &none
&kp EQUAL         &kp SPACE             &kp GREATER_THAN          &none                  &none             &none
            >;
        };

        button_mac {
            bindings = <
&none               &kp LG(Z)         &kp LG(A)            &kp LS(LG(Z))  &none  &none  &none  &none  &none  &none
&kp LG(A)           &kp LG(S)         &none                &kp LC(LG(F))  &none  &none  &none  &none  &none  &none
&none               &kp LG(X)         &kp LG(C)            &kp LG(V)      &none  &none  &none  &none  &none  &none
&kp LC(LEFT_ARROW)  &kp LC(UP_ARROW)  &kp LC(RIGHT_ARROW)  &none          &none  &none
            >;
        };

        utils {
            bindings = <
&bootloader     &none         &none         &none         &sys_reset  &none  &none  &none  &none  &bootloader
&none           &none         &none         &none         &none       &none  &none  &none  &none  &none
&none           &none         &none         &out OUT_TOG  &none       &none  &none  &none  &none  &none
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &none         &none       &none
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
